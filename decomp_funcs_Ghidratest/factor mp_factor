
void mp_factor(__mpz_struct *t,mp_factors *factors)

{
  long lVar1;
  _Bool _Var2;
  int iVar3;
  mp_bitcnt_t cnt;
  ulong uVar4;
  uint uVar5;
  ulong d;
  long in_FS_OFFSET;
  mpz_t q;
  mpz_t pz;
  
  lVar1 = *(long *)(in_FS_OFFSET + 0x28);
  factors->p = (mpz_t *)0x0;
  factors->e = (ulong *)0x0;
  factors->nfactors = 0;
  iVar3 = mpz_sgn(t);
  if (iVar3 != 0) {
    if (dev_debug != false) {
      fwrite("[trial division] ",1,0x11,stderr);
    }
    mpz_init(q);
    cnt = mpz_scan1(t,0);
    mpz_fdiv_q_2exp(t,t,cnt);
    if (cnt != 0) {
      do {
        mpz_init_set_ui(pz,2);
        mp_factor_insert(factors,pz);
        mpz_clear(pz);
        cnt = cnt - 1;
      } while (cnt != 0);
    }
    uVar4 = 1;
    d = 3;
    do {
      while( true ) {
        iVar3 = mpz_divisible_ui_p(t,d);
        if (iVar3 != 0) break;
        uVar5 = (int)uVar4 + 1;
        d = d + "\x01\x02\x02\x04\x02\x04\x02\x04\x06\x02\x06\x04\x02\x04\x06\x06\x02\x06\x04\x02\x06\x04\x06\b\x04\x02\x04\x02\x04\x0e\x04\x06\x02\n\x02\x06\x06\x04\x06\x06\x02\n\x02\x04\x02\f\f\x04\x02\x04\x06\x02\n\x06\x06\x06\x02\x06\x04\x02\n\x0e\x04\x02\x04\x0e\x06\n\x02\x04\x06\b\x06\x06\x04\x06\b\x04\b\n\x02\n\x02\x06\x04\x06\b\x04\x02\x04\f\b\x04\b\x04\x06\f\x02\x12\x06\n\x06\x06\x02\x06\n\x06\x06\x02\x06\x06\x04\x02\f\n\x02\x04\x06\x06\x02\f\x04\x06\b\n\b\n\b\x06\x06\x04\b\x06\x04\b\x04\x0e\n\f\x02\n\x02\x04\x02\n\x0e\x04\x02\x04\x0e\x04\x02\x04\x14\x04\b\n\b\x04\x06\x06\x0e\x04\x06\x06\b\x06\f\x04\x06\x02\n\x02\x06\n\x02\n\x02\x06\x12\x04\x02\x04\x06\x06\b\x06\x06\x16\x02\n\b\n\x06\x06\b\f\x04\x06\x06\x02\x06\f\n\x12\x02\x04\x06\x02\x06\x04\x02\x04\f\x02\x06\"\x06\x06\b\x12\n\x0e\x04\x02\x04\x06\b\x04\x02\x06\f\n\x02\x04\x02\x04\x06\f\f\b\f\x06\x04\x06\b\x04\b\x04\x0e\x04\x06\x02\x04\x06\x02\x06\n\x14\x06\x04\x02\x18\x04\x02\n\f\x02\n\b\x06\x06\x06\x12\x06\x04\x02\f\n\f\b\x10\x0e\x06\x04\x02\x04\x02\n\f\x06\x06\x12\x02\x10\x02\x16\x06\b\x06\x04\x02\x04\b\x06\n\x02\n\x0e\n\x06\f\x02\x04\x02\n\f\x02\x10\x02\x06\x04\x02\n\b\x12\x18\x04\x06\b\x10\x02\x04\b\x10\x02\x04\b\x06\x06\x04\f\x02\x16\x06\x02\x06\x04\x06\x0e\x06\x04\x02\x06\x04\x06\f\x06\x06\x0e\x04\x06\f\b\x06\x04\x1a\x12\n\b\x04\x06\x02\x06\x16\f\x02\x10\b\x04\f\x0e\n\x02\x04\b\x06\x06\x04\x02\x04\x06\b\x04\x02\x06\n\x02\n\b\x04\x0e\n\f\x02\x06\x04\x02\x10\x0e\x04\x06\b\x06\x04\x12\b\n\x06\x06\b\n\f\x0e\x04\x06\x06\x02\x1c\x02\n\b\x04\x0e\x04\b\f\x06\f\x04\x06\x14\n\x02\x10\x1a\x04\x02\f\x06\x04\f\x06\b\x04\b\x16\x02\x04\x02\f\x1c\x02\x06\x06\x06\x04\x06\x02\f\x04\f\x02\n\x02\x10\x02\x10\x06\x14\x10\b\x04\x02\x04\x02\x16\b\f\x06\n\x02\x04\x06\x02\x06\n\x02\f\n\x02\n\x0e\x06\x04\x06\b\x06\x06\x10\f\x02\x04\x0e\x06\x04\b\n\b\x06\x06\x16\x06\x02\n\x0e\x04\x06\x12\x02\n\x0e\x04\x02\n\x0e\x04\b\x12\x04\x06\x02\x04\x06\x02\f\x04\x14\x16\f\x02\x04\x06\x06\x02\x06\x16\x02\x06\x10\x06\f\x02\x06\f\x10\x02\x04\x06\x0e\x04\x02\x12\x18\n\x06\x02\n\x02\n\x02\n\x06\x02\n\x02\n\x06\b\x1e\n\x02\n\b\x06\n\x12\x06\f\f\x02\x12\x06\x04\x06\x06\x12\x02\n\x0e\x06\x04\x02\x04\x18\x02\f\x06\x10\b\x06\x06\x12\x10\x02\x04\x06\x02\x06\x06\n\x06\f\f\x12\x02\x06\x04\x12\b\x18\x04\x02\x04\x06\x02\f\x04\x0e\x1e\n\x06\f\x0e\x06\n\f\x02\x04\x06\b\x06\n\x02\x04\x0e\x06\x06"
                [uVar4];
        iVar3 = mpz_cmp_ui(t,d * d);
        if ((iVar3 < 0) || (uVar4 = (ulong)uVar5, uVar5 == 0x29d)) goto LAB_00103b50;
      }
      mpz_tdiv_q_ui(t,t,d);
      mpz_init_set_ui(pz,d);
      mp_factor_insert(factors,pz);
      mpz_clear(pz);
    } while ((int)uVar4 != 0x29d);
LAB_00103b50:
    mpz_clear(q);
    iVar3 = mpz_cmp_ui(t,1);
    if (iVar3 != 0) {
      if (dev_debug != false) {
        fwrite("[is number prime?] ",1,0x13,stderr);
      }
      _Var2 = mp_prime_p(t);
      if (_Var2 == false) {
        mp_factor_using_pollard_rho(t,1,factors);
      }
      else {
        mp_factor_insert(factors,t);
      }
    }
  }
  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {
    return;
  }
                    /* WARNING: Subroutine does not return */
  __stack_chk_fail();
}

